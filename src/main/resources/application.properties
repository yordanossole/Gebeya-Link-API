spring.application.name=dreamShops

#server.port=9193
server.port=${PORT:8080}

#spring.datasource.url=jdbc:postgresql://localhost:5432/dream_shops_db
#spring.datasource.username=postgres
#spring.datasource.password=postgres
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

#spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
## (Create, Update, Create-drop, Validate)
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.ddl-auto=create-drop

api.prefix = /api/v1

spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB

auth.token.expirationInMils=3600000
#auth.token.jwtSecrete=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.cThIIoDvwdueQB468K5xDc5633seEFoqwxjF_xSJyQQ
auth.token.jwtSecrete=${JWT_SECRET}
logging.level.org.springframework=DEBUG


#I have finished working
#the issues I have seen are: clearing cart has some issues, it workes but when order placed it doesn't work properly

#security
#some authentication problem might be there in cart and cartItem controllers
#or just simple exception handling
#simple exception handling might be enough for user controller too
