spring.application.name=dreamShops

server.port=9193
#server.port=${PORT:8080}

#local
#spring.datasource.url=jdbc:postgresql://localhost:5432/dream_shops_db
#spring.datasource.username=postgres
#spring.datasource.password=postgres

#env variable
#spring.datasource.url=${SPRING_DATASOURCE_URL}
#spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
#spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

#h2
#spring.datasource.url=jdbc:h2:mem:dreamshops;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
#spring.datasource.url=jdbc:h2:file:./data/demo-db
#spring.datasource.username=sa
#spring.datasource.password=""

#render-external
#spring.datasource.url=jdbc:postgresql://dpg-d091j3pr0fns73du1j40-a.oregon-postgres.render.com/dream_shops_db_scaj
#spring.datasource.username=postgres
#spring.datasource.password=postgres

#supabase
spring.datasource.url=jdbc:postgresql://aws-0-us-east-2.pooler.supabase.com:6543/postgres?prepareThreshold=0
spring.datasource.username=postgres.wdhjczrpcfmrdizafcdv
spring.datasource.password=0000

spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.driver-class-name=org.h2.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
# Hibernate DDL and dialect
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# Enable the web-based console at /h2-console
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console


# Show SQL to verify it?s talking to H2
spring.jpa.show-sql=true


#spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
## (Create, Update, Create-drop, Validate)
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.ddl-auto=create-drop

api.prefix = /api/v1

spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB

auth.token.expirationInMils=2000000000
auth.token.jwtSecrete=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.cThIIoDvwdueQB468K5xDc5633seEFoqwxjF_xSJyQQ
#auth.token.jwtSecrete=${JWT_SECRET}
logging.level.org.springframework=DEBUG

# fix issues related to user table specially for h2 database
spring.jpa.properties.hibernate.globally_quoted_identifiers=true

#I have finished working
#the issues I have seen are: clearing cart has some issues, it workes but when order placed it doesn't work properly

#security
#some authentication problem might be there in cart and cartItem controllers
#or just simple exception handling
#simple exception handling might be enough for user controller too
